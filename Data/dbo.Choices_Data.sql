INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1, 'a) Delegates can point to instance methods only.')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1, 'b) Delegates cannot be used with static methods.')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1, 'c) Delegates are type-safe.')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1, 'd) Delegates canâ€™t be used with lambda expressions.')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (2, 'a) is')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (2, 'b) typeof')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (2, 'c) sizeof')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (2, 'd) type')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (3, 'a) List')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (3, 'b) Dictionary')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (3, 'c) Queue')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (3, 'd) HashSet')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (4, 'a) true')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (4, 'b) false')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (4, 'c) null')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (4, 'd) 0')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (5, 'a) It performs a deep copy of objects')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (5, 'b) It checks for type compatibility and returns null if the conversion is not possible')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (5, 'c) It compares two strings')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (5, 'd) It enforces inheritance')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (6, 'a) int? x;')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (6, 'b) nullable int x;')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (6, 'c) int x?;')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (6, 'd) int x = null;')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (7, 'a) final')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (7, 'b) static')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (7, 'c) sealed')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (7, 'd) abstract')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (8, 'a) Checks type compatibility')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (8, 'b) Performs a deep copy of objects')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (8, 'c) Implements inheritance')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (8, 'd) Compares two strings')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (9, 'a) int')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (9, 'b) char')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (9, 'c) bool')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (9, 'd) string')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (10, 'a) Object')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (10, 'b) Base')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (10, 'c) Root')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (10, 'd) System')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (11, 'a) string str = null;')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (11, 'b) string str = "";')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (11, 'c) string str = " ";')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (11, 'd) string str = String.Empty;')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (12, 'a) A collection of functions')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (12, 'b) A new programming language')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (12, 'c) A library for parallel programming')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (12, 'd) A framework for querying data in a consistent manner')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (13, 'a) Placing a value type inside an object')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (13, 'b) Extracting a value type from an object')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (13, 'c) Creating an array of objects')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (13, 'd) Defining multiple boxes for UI design')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (14, 'a) Compares two values')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (14, 'b) Assign one of two values depending on a condition')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (14, 'c) Checks for nullability and returns the non-null value')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (14, 'd) Merges two values')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (15, 'a) The variable can change')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (15, 'b) The method can be overridden')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (15, 'c) The member belongs to the type rather than any specific instance')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (15, 'd) The value can be assigned only once')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1004, 'A. Red, B. Blue, C. Green')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1006, 'Blue')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1006, 'Green')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1006, 'Red')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1006, 'Yellow')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1007, 'const')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1007, 'final')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1007, 'readonly')
INSERT INTO [dbo].[Choices] ([Question_ID], [Choices]) VALUES (1007, 'static')
